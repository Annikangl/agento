services:
    nginx:
        build:
            context: ./docker/nginx
        depends_on:
            - php-fpm
        environment:
            - TZ=${APP_TIMEZONE:-Asia/Almaty}
        networks:
            - app
        ports:
            - "${NGINX_HOST_HTTPS_PORT}:443"
        #            - "${NGINX_HOST_HTTP_PORT}:80"
        volumes:
            - ${NGINX_SSL_PATH}:/etc/nginx/ssl
            - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
            - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
            - ${NGINX_SITES_PATH}:/etc/nginx/sites-available

    php-fpm:
        build:
            context: ./docker/php-fpm
        volumes:
            - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
        networks:
            - app
        environment:
            - TZ=${APP_TIMEZONE:-Asia/Almaty}

    nodejs:
        build:
            context: ./docker/nodejs
        container_name: nodejs
        volumes:
            - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
        tty: true

    cron:
        build:
            context: ./docker/cron
            dockerfile: Dockerfile
        volumes:
            - '${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}'
        networks:
            - app

    mysql:
        image: mysql:5.7.22
        command:
            - --default-authentication-plugin=mysql_native_password
        ports:
            - '${DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: "%"
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - '${APP_CODE_PATH_HOST}/storage/docker/mysql:/var/lib/mysql'
            - '${APP_CODE_PATH_HOST}/docker/mysql/my.cnf:/etc/mysql/my.cnf'
            - '${APP_CODE_PATH_HOST}/docker/mysql/create-testing-db.sh:/docker-entrypoint-initdb.d/10-create-testing-db.sh'
        networks:
            - app

    redis:
        image: redis:latest
        container_name: agento_redis
        command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"
        volumes:
            - '${APP_CODE_PATH_HOST}/storage/docker/redis:/data'
        ports:
            - '${REDIS_PORT}:6379'
        networks:
            - app

    pdf-scrappers:
        build:
            context: ./docker/pdf-scrappers
            dockerfile: Dockerfile
        volumes:
            - '${APP_CODE_PATH_HOST}/docker/pdf-scrappers/src:/var/www/html'
            - '${APP_CODE_PATH_HOST}storage/app/public/pdfs:/var/www/html/tmp'
        ports:
            - "8081:80"
        networks:
            - app

    scrappers:
        build:
            context: ./docker/scrappers
            dockerfile: Dockerfile
        volumes:
            - '${APP_CODE_PATH_HOST}/docker/scrappers/src:/var/www/scrappers'
        depends_on:
            - mysql
        networks:
            - app


networks:
    app:
        driver: bridge

